name: Update timetable
env:
  BIN: maid-felix

on:
  schedule:
   - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  run_scraper:
    name: Scrape timetable
    runs-on: ubuntu-latest
    outputs:
      repo-updated: ${{ steps.git-step.outputs.updated }}
    env:
      LOGIN: ${{ secrets.STUDENT_ID }}
      PASSWORD: ${{ secrets.STUDENT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download executable
        uses: robinraju/release-downloader@v1.5
        with:
          latest: true
          fileName: "maid-felix.tar.gz"
      - name: Run the scraper
        run: |
          mkdir -p ./target/release
          tar -xzvf ${{ env.BIN }}.tar.gz -C ./target/release/
          rm ${{ env.BIN }}.tar.gz
          ./target/release/${{ env.BIN }}
      - name: Upload all changes to GIT
        id: git-step
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          [[ -z $(git status -uno --porcelain) ]] && echo "No updates detected, no need for push" && exit 0;
          git commit -m "update timetable"
          git push origin main --force
          echo "::set-output name=updated::yes"

  release:
    name: Upload data to latest release
    runs-on: ubuntu-latest
    needs: run_scraper
    if: ${{ needs.run_scraper.outputs.repo-updated }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: "main"
      - name: Prepare zip file
        run: |
          mkdir assets
          zip --junk-paths -r assets/data.zip data
      - name: Get release ID
        id: getid
        run:   |
           rel_id=$(curl -sL -H 'Authorization: token ${{ secrets.PAT }}' https://api.github.com/repos/mad-maids/maid.felix/releases/latest | jq -r '.id')
           echo "::set-output name=rel_id::$rel_id"
      - name: Remove release asset
        uses: flcdrg/remove-release-asset-action@v1.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.getid.outputs.rel_id }}
          asset_name: 'data.zip'
      - name: Get upload URL
        id: geturl
        run:   |
           upload_url=$(curl -sL -H 'Authorization: token ${{ secrets.PAT }}' https://api.github.com/repos/mad-maids/maid.felix/releases/latest | jq -r '.upload_url')
           echo "::set-output name=upload_url::$upload_url"
      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.geturl.outputs.upload_url }}
          asset_path: ./assets/data.zip
          asset_name: data.zip
          asset_content_type: application/zip
