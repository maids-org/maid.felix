name: Update timetable

on:
  # requests from outside uzbekistan are not being processed rn
  #schedule:
  #  - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  build_and_run:
    name: Scrape timetable
    runs-on: ubuntu-latest
    outputs:
      repo-updated: ${{ steps.git-step.outputs.updated }}
    env:
      LOGIN: ${{ secrets.STUDENT_ID }}
      PASSWORD: ${{ secrets.STUDENT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build the scraper
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Run the scraper
        run: |
          ./target/release/maid.felix
      - name: Upload all changes to GIT
        id: git-step
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          [[ -z $(git status -uno --porcelain) ]] && echo "No updates detected, no need for push" && exit 0;
          git commit -m "update timetable"
          git push origin main --force
          echo "::set-output name=updated::yes"

  release:
    name: Prepare new data release
    runs-on: ubuntu-latest
    needs: build_and_run
    if: ${{ needs.build_and_run.outputs.repo-updated }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: "main"
      - name: Prepare zip files
        run: |
          mkdir assets
          zip --junk-paths -r assets/data.zip data
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload release assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ./assets
